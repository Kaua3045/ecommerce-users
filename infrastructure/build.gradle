plugins {
    id 'java'
    id 'jacoco-report-aggregation'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'org.flywaydb.flyway' version '9.8.1'
}

group 'com.kaua.ecommerce.users.infrastructure'
version '0.1.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation 'mysql:mysql-connector-java:8.0.26'

    implementation('org.springframework.boot:spring-boot-starter-web:3.1.2') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow:3.1.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server:3.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-amqp:3.1.2'

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    implementation 'com.fasterxml.jackson.module:jackson-module-afterburner:2.14.2'

    implementation platform('software.amazon.awssdk:bom:2.20.25')
    implementation 'software.amazon.awssdk:s3-transfer-manager:2.20.109'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.2'
    testImplementation 'org.springframework.amqp:spring-rabbit-test:2.4.14'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testRuntimeOnly 'com.h2database:h2'
}

testCodeCoverageReport {
    dependsOn(test)

    reports {
        csv.required = true
    }

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: [
                            'com/kaua/ecommerce/users/infrastructure/configurations/*',
                            'com/kaua/ecommerce/users/infrastructure/Main.class'
                    ])
                })
        )
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.95
            }
        }
    }

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: [
                            'com/kaua/ecommerce/users/infrastructure/configurations/*',
                            'com/kaua/ecommerce/users/infrastructure/Main.class'
                    ])
                })
        )
    }
}

test {
    useJUnitPlatform()
}