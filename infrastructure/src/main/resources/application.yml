aws-cloud:
  access-key: ${AWS_ACCESS_KEY}
  secret-key: ${AWS_SECRET_KEY}
  s3:
    bucketName: ${AWS_S3_BUCKET_NAME}
    region: ${AWS_REGION}

amqp:
  admin:
    auto-create: false
  queues:
    account-created:
      exchange: account.events
      routing-key: account.created
      queue: account.created.queue
    account-created-generate-confirmation-code-mail:
      exchange: account.events
      routing-key: account.created
      queue: account.generate.confirmation.code.mail.queue
    account-deleted:
      exchange: account.events
      routing-key: account.deleted
      queue: account.deleted.queue
    email-queue:
      exchange: email.events
      routing-key: email.send
      queue: email.queue

server:
  port: 8080
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  undertow:
    threads:
      worker: 64
      io: 4

spring:
  flyway:
    enabled: false
  datasource:
    hikari:
      auto-commit: false
      connection-timeout: 250
      max-lifetime: 600000
      maximum-pool-size: 20
      minimum-idle: 10
      pool-name: master
  jpa:
    open-in-view: false
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      "[hibernate.dialect]": org.hibernate.dialect.MySQLDialect
      "[hibernate.generate_statistics]": false
      "[hibernate.connection.provider_disables_autocommit]": true
  rabbitmq:
    publisher-confirm-type: correlated
    publisher-returns: true
    dynamic: ${amqp.admin.auto-create}
    host: ${amqp.host}
    port: ${amqp.port}
    username: ${amqp.username}
    password: ${amqp.password}
  data:
    redis:
      database: 0
      host: ${redis.host}
      port: ${redis.port}